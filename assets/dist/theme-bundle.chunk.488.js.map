{"version":3,"file":"theme-bundle.chunk.488.js","mappings":"8VAEwD,IAEnCA,EAAO,SAAAC,G,QAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAYvB,O,EAZuBF,G,EAAAD,G,sEAAAA,EAAAI,UACxBC,QAAA,WAAU,IAAAC,EAAA,MACNC,EAAAA,EAAAA,GAAgBC,KAAKC,QAAQC,MAE7B,IAAMC,EAAUH,KAAKC,QAAQG,qBAE7BC,EAAE,QAAQC,GAAG,QAAS,4BAA4B,SAAAC,GAC1CT,EAAKG,QAAQO,YAAYC,QAAU,KACnCC,EAAAA,EAAAA,IAAeP,GACfI,EAAMI,iBAEd,GACJ,EAACnB,CAAA,CAZuB,CAASoB,EAAAA,E,oGCWrC,SAASC,EAAiBC,EAASC,EAAOC,GACf,IAAnBF,EAAQL,QACHM,EAAME,GAAG,YACVF,EAAMG,SAAS,QAEnBH,EAAMI,KAAK,OAAWH,EAAWI,QAAO,IAAIN,EAAQO,KAAK,MACzDN,EAAMO,KAAK,kBAAkBC,KAAKT,EAAQL,SAE1CM,EAAMS,YAAY,OAE1B,CAEe,SAAS,EAACR,GACrB,IAAIS,EAEEC,EAAWrB,EAAE,QAAQiB,KAAK,oCAC1BK,EAAetB,EAAE,uBAEC,IAApBqB,EAASjB,QAGTI,EAFAY,EAAWG,IAAMF,GAAU,SAAAG,GAAO,OAAIA,EAAQC,KAAK,IAExBH,EAAcX,GAG7C,IAAMe,EAAiBN,GAAY,GAEnCpB,EAAE,QAAQC,GAAG,QAAS,qBAAqB,SAAAC,GACvC,IA/B2ByB,EA+BrBC,EAAU1B,EAAM2B,cAAcJ,MAC9BK,EAAsB9B,EAAE,uBAE1BE,EAAM2B,cAAcE,SAlCGJ,EAmCUC,EAAhBF,EAlCjBM,KAAKL,IATjB,SAA0BlB,EAASkB,GAC/B,IAAMM,EAAQxB,EAAQyB,QAAQP,GAE1BM,GAAS,GACTxB,EAAQ0B,OAAOF,EAAO,EAE9B,CAuCYG,CAAiBV,EAAgBE,GAGrCpB,EAAiBkB,EAAgBI,EAAqBnB,EAC1D,IAEAX,EAAE,QAAQC,GAAG,SAAU,0BAA0B,SAAAC,GAC/BF,EAAEE,EAAM2B,eACUZ,KAAK,oCAEfb,QAAU,KAC5BC,EAAAA,EAAAA,IAAe,oDACfH,EAAMI,iBAEd,IAEAN,EAAE,QAAQC,GAAG,QAAS,uBAAuB,WAGzC,GAF6BD,EAAE,QAAQiB,KAAK,oCAEnBb,QAAU,EAE/B,OADAC,EAAAA,EAAAA,IAAe,qDACR,CAEf,GACJ,C,WCpDAgC,EAAOC,QAXP,SAAkBC,EAAOC,GAKvB,IAJA,IAAIP,GAAS,EACT7B,EAAkB,MAATmC,EAAgB,EAAIA,EAAMnC,OACnCqC,EAASC,MAAMtC,KAEV6B,EAAQ7B,GACfqC,EAAOR,GAASO,EAASD,EAAMN,GAAQA,EAAOM,GAEhD,OAAOE,CACT,C","sources":["webpack://lonestartemplates-partswarehouse/./assets/js/theme/compare.js","webpack://lonestartemplates-partswarehouse/./assets/js/theme/global/compare-products.js","webpack://lonestartemplates-partswarehouse/./node_modules/lodash/map.js"],"sourcesContent":["import PageManager from './page-manager';\nimport { showAlertModal } from './global/modal';\nimport compareProducts from './global/compare-products';\n\nexport default class Compare extends PageManager {\n    onReady() {\n        compareProducts(this.context.urls);\n\n        const message = this.context.compareRemoveMessage;\n\n        $('body').on('click', '[data-comparison-remove]', event => {\n            if (this.context.comparisons.length <= 2) {\n                showAlertModal(message);\n                event.preventDefault();\n            }\n        });\n    }\n}\n","import _ from 'lodash';\nimport { showAlertModal } from './modal';\n\nfunction decrementCounter(counter, item) {\n    const index = counter.indexOf(item);\n\n    if (index > -1) {\n        counter.splice(index, 1);\n    }\n}\n\nfunction incrementCounter(counter, item) {\n    counter.push(item);\n}\n\nfunction updateCounterNav(counter, $link, urlContext) {\n    if (counter.length !== 0) {\n        if (!$link.is('visible')) {\n            $link.addClass('show');\n        }\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\n        $link.find('span.countPill').html(counter.length);\n    } else {\n        $link.removeClass('show');\n    }\n}\n\nexport default function (urlContext) {\n    let products;\n\n    const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\n    const $compareLink = $('a[data-compare-nav]');\n\n    if ($checked.length !== 0) {\n        products = _.map($checked, element => element.value);\n\n        updateCounterNav(products, $compareLink, urlContext);\n    }\n\n    const compareCounter = products || [];\n\n    $('body').on('click', '[data-compare-id]', event => {\n        const product = event.currentTarget.value;\n        const $clickedCompareLink = $('a[data-compare-nav]');\n\n        if (event.currentTarget.checked) {\n            incrementCounter(compareCounter, product);\n        } else {\n            decrementCounter(compareCounter, product);\n        }\n\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\n    });\n\n    $('body').on('submit', '[data-product-compare]', event => {\n        const $this = $(event.currentTarget);\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\n\n        if (productsToCompare.length <= 1) {\n            showAlertModal('You must select at least two products to compare');\n            event.preventDefault();\n        }\n    });\n\n    $('body').on('click', 'a[data-compare-nav]', () => {\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        if ($clickedCheckedInput.length <= 1) {\n            showAlertModal('You must select at least two products to compare');\n            return false;\n        }\n    });\n}\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n"],"names":["Compare","_PageManager","apply","arguments","prototype","onReady","_this","compareProducts","this","context","urls","message","compareRemoveMessage","$","on","event","comparisons","length","showAlertModal","preventDefault","PageManager","updateCounterNav","counter","$link","urlContext","is","addClass","attr","compare","join","find","html","removeClass","products","$checked","$compareLink","_map","element","value","compareCounter","item","product","currentTarget","$clickedCompareLink","checked","push","index","indexOf","splice","decrementCounter","module","exports","array","iteratee","result","Array"],"sourceRoot":""}