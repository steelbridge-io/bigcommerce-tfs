{"version":3,"file":"theme-bundle.chunk.127.js","mappings":"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","sources":["webpack://lonestartemplates-partswarehouse/./assets/js/theme/common/url-utils.js","webpack://lonestartemplates-partswarehouse/./assets/js/theme/search.js"],"sourcesContent":["import Url from 'url';\n\nconst urlUtils = {\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\n\n    goToUrl: (url) => {\n        window.history.pushState({}, document.title, url);\n        $(window).trigger('statechange');\n    },\n\n    replaceParams: (url, params) => {\n        const parsed = Url.parse(url, true);\n        let param;\n\n        // Let the formatter use the query object to build the new url\n        parsed.search = null;\n\n        for (param in params) {\n            if (params.hasOwnProperty(param)) {\n                parsed.query[param] = params[param];\n            }\n        }\n\n        return Url.format(parsed);\n    },\n\n    buildQueryString: (queryData) => {\n        let out = '';\n        let key;\n        for (key in queryData) {\n            if (queryData.hasOwnProperty(key)) {\n                if (Array.isArray(queryData[key])) {\n                    let ndx;\n\n                    for (ndx in queryData[key]) {\n                        if (queryData[key].hasOwnProperty(ndx)) {\n                            out += `&${key}=${queryData[key][ndx]}`;\n                        }\n                    }\n                } else {\n                    out += `&${key}=${queryData[key]}`;\n                }\n            }\n        }\n\n        return out.substring(1);\n    },\n\n    parseQueryParams: (queryData) => {\n        const params = {};\n\n        for (let i = 0; i < queryData.length; i++) {\n            const temp = queryData[i].split('=');\n\n            if (temp[0] in params) {\n                if (Array.isArray(params[temp[0]])) {\n                    params[temp[0]].push(temp[1]);\n                } else {\n                    params[temp[0]] = [params[temp[0]], temp[1]];\n                }\n            } else {\n                params[temp[0]] = temp[1];\n            }\n        }\n\n        return params;\n    },\n};\n\nexport default urlUtils;\n","import { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport FacetedSearch from './common/faceted-search';\nimport compareProducts from './global/compare-products';\nimport urlUtils from './common/url-utils';\nimport Url from 'url';\nimport collapsibleFactory from './common/collapsible';\nimport 'jstree';\nimport nod from './common/nod';\n\nexport default class Search extends CatalogPage {\n    formatCategoryTreeForJSTree(node) {\n        const nodeData = {\n            text: node.data,\n            id: node.metadata.id,\n            state: {\n                selected: node.selected,\n            },\n        };\n\n        if (node.state) {\n            nodeData.state.opened = node.state === 'open';\n            nodeData.children = true;\n        }\n\n        if (node.children) {\n            nodeData.children = [];\n            node.children.forEach((childNode) => {\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\n            });\n        }\n\n        return nodeData;\n    }\n\n    showProducts() {\n        const url = urlUtils.replaceParams(window.location.href, {\n            section: 'product',\n        });\n\n        this.$productListingContainer.removeClass('u-hiddenVisually');\n        this.$facetedSearchContainer.removeClass('u-hiddenVisually');\n        this.$contentResultsContainer.addClass('u-hiddenVisually');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-content-results-toggle]').addClass('navBar-action');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action');\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\n\n        urlUtils.goToUrl(url);\n    }\n\n    showContent() {\n        const url = urlUtils.replaceParams(window.location.href, {\n            section: 'content',\n        });\n\n        this.$contentResultsContainer.removeClass('u-hiddenVisually');\n        this.$productListingContainer.addClass('u-hiddenVisually');\n        this.$facetedSearchContainer.addClass('u-hiddenVisually');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-product-results-toggle]').addClass('navBar-action');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action');\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\n\n        urlUtils.goToUrl(url);\n    }\n\n    onReady() {\n        compareProducts(this.context.urls);\n\n        const $searchForm = $('[data-advanced-search-form]');\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\n        const url = Url.parse(window.location.href, true);\n        const treeData = [];\n        this.$productListingContainer = $('#product-listing-container');\n        this.$facetedSearchContainer = $('#faceted-search-container');\n        this.$contentResultsContainer = $('#search-results-content');\n\n        // Init faceted search\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        $('[data-product-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showProducts();\n        });\n\n        $('[data-content-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showContent();\n        });\n\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\n            this.showContent();\n        } else {\n            this.showProducts();\n        }\n\n        const validator = this.initValidation($searchForm)\n            .bindValidation($searchForm.find('#search_query_adv'));\n\n        this.context.categoryTree.forEach((node) => {\n            treeData.push(this.formatCategoryTreeForJSTree(node));\n        });\n\n        this.categoryTreeData = treeData;\n        this.createCategoryTree($categoryTreeContainer);\n\n        $searchForm.on('submit', event => {\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\n\n            if (!validator.check()) {\n                return event.preventDefault();\n            }\n\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\n\n            for (const categoryId of selectedCategoryIds) {\n                const input = $('<input>', {\n                    type: 'hidden',\n                    name: 'category[]',\n                    value: categoryId,\n                });\n\n                $searchForm.append(input);\n            }\n        });\n    }\n\n    loadTreeNodes(node, cb) {\n        $.ajax({\n            url: '/remote/v1/category-tree',\n            data: {\n                selectedCategoryId: node.id,\n                prefix: 'category',\n            },\n            headers: {\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\n            },\n        }).done(data => {\n            const formattedResults = [];\n\n            data.forEach((dataNode) => {\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\n            });\n\n            cb(formattedResults);\n        });\n    }\n\n    createCategoryTree($container) {\n        const treeOptions = {\n            core: {\n                data: (node, cb) => {\n                    // Root node\n                    if (node.id === '#') {\n                        cb(this.categoryTreeData);\n                    } else {\n                        // Lazy loaded children\n                        this.loadTreeNodes(node, cb);\n                    }\n                },\n                themes: {\n                    icons: true,\n                },\n            },\n            checkbox: {\n                three_state: false,\n            },\n            plugins: [\n                'checkbox',\n            ],\n        };\n\n        $container.jstree(treeOptions);\n    }\n\n    initFacetedSearch() {\n        const $productListingContainer = $('#product-listing-container');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const $searchHeading = $('#search-results-heading');\n        const $searchCount = $('#search-results-product-count');\n        const productsPerPage = this.context.searchProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'search/product-listing',\n                sidebar: 'search/sidebar',\n                heading: 'search/heading',\n                productCount: 'search/product-count',\n            },\n            config: {\n                product_results: {\n                    limit: productsPerPage,\n                },\n            },\n            showMore: 'search/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $productListingContainer.html(content.productListing);\n            $facetedSearchContainer.html(content.sidebar);\n            $searchHeading.html(content.heading);\n            $searchCount.html(content.productCount);\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        });\n    }\n\n    initValidation($form) {\n        this.$form = $form;\n        this.validator = nod({\n            submit: $form,\n        });\n\n        return this;\n    }\n\n    bindValidation($element) {\n        if (this.validator) {\n            this.validator.add({\n                selector: $element,\n                validate: 'presence',\n                errorMessage: $element.data('errorMessage'),\n            });\n        }\n\n        return this;\n    }\n\n    check() {\n        if (this.validator) {\n            this.validator.performCheck();\n            return this.validator.areAll('valid');\n        }\n\n        return false;\n    }\n}\n"],"names":["url","window","history","pushState","document","title","$","trigger","params","param","parsed","Url","search","hasOwnProperty","query","Search","_CatalogPage","apply","arguments","_proto","prototype","formatCategoryTreeForJSTree","node","_this","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","urlUtils","location","href","section","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","showContent","onReady","_this2","compareProducts","context","urls","$searchForm","$categoryTreeContainer","find","treeData","length","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","event","preventDefault","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","_step","_iterator","_createForOfIteratorHelperLoose","done","categoryId","value","input","type","name","append","loadTreeNodes","cb","_this3","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","formattedResults","dataNode","$container","_this4","treeOptions","core","themes","icons","checkbox","three_state","plugins","$searchHeading","$searchCount","requestOptions","template","productListing","sidebar","heading","productCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","animate","scrollTop","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage"],"sourceRoot":""}