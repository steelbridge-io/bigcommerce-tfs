{"version":3,"file":"theme-bundle.chunk.656.js","mappings":"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","sources":["webpack://lonestartemplates-partswarehouse/./assets/js/theme/catalog.js","webpack://lonestartemplates-partswarehouse/./assets/js/theme/common/faceted-search.js","webpack://lonestartemplates-partswarehouse/./assets/js/theme/common/utils/url-utils.js","webpack://lonestartemplates-partswarehouse/./assets/js/theme/global/compare-products.js"],"sourcesContent":["import PageManager from './page-manager';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    constructor(context) {\n        super(context);\n\n        window.addEventListener('beforeunload', () => {\n            if (document.activeElement.id === 'sort') {\n                window.localStorage.setItem('sortByStatus', 'selected');\n            }\n        });\n    }\n\n    arrangeFocusOnSortBy() {\n        const $sortBySelector = $('[data-sort-by=\"product\"] #sort');\n\n        if (window.localStorage.getItem('sortByStatus')) {\n            $sortBySelector.focus();\n            window.localStorage.removeItem('sortByStatus');\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport Url from 'url';\nimport urlUtils from './utils/url-utils';\nimport modalFactory from '../global/modal';\nimport collapsibleFactory from './collapsible';\nimport { Validators } from './utils/form-utils';\nimport nod from './nod';\n\n\nconst defaultOptions = {\n    accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\n    blockerSelector: '#facetedSearch .blocker',\n    clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\n    componentSelector: '#facetedSearch-navList',\n    facetNavListSelector: '#facetedSearch .navList',\n    priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\n    priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\n    priceRangeFormSelector: '#facet-range-form',\n    priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\n    priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\n    showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\n    facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\n    modal: modalFactory('#modal')[0],\n    modalOpen: false,\n};\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n    /**\n     * @param {object} requestOptions - Object with options for the ajax requests\n     * @param {function} callback - Function to execute after fetching templates\n     * @param {object} options - Configurable options\n     * @example\n     *\n     * let requestOptions = {\n     *      templates: {\n     *          productListing: 'category/product-listing',\n     *          sidebar: 'category/sidebar'\n     *     }\n     * };\n     *\n     * let templatesDidLoad = function(content) {\n     *     $productListingContainer.html(content.productListing);\n     *     $facetedSearchContainer.html(content.sidebar);\n     * };\n     *\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n     */\n    constructor(requestOptions, callback, options) {\n        // Private properties\n        this.requestOptions = requestOptions;\n        this.callback = callback;\n        this.options = _.extend({}, defaultOptions, options);\n        this.collapsedFacets = [];\n        this.collapsedFacetItems = [];\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Show limited items by default\n        $(this.options.facetNavListSelector).each((index, navList) => {\n            this.collapseFacetItems($(navList));\n        });\n\n        // Mark initially collapsed accordions\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n\n            if (collapsible.isCollapsed) {\n                this.collapsedFacets.push(collapsible.targetId);\n            }\n        });\n\n        // Collapse all facets if initially hidden\n        // NOTE: Need to execute after Collapsible gets bootstrapped\n        setTimeout(() => {\n            if ($(this.options.componentSelector).is(':hidden')) {\n                this.collapseAllFacets();\n            }\n        });\n\n        // Observe user events\n        this.onStateChange = this.onStateChange.bind(this);\n        this.onToggleClick = this.onToggleClick.bind(this);\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\n        this.onClearFacet = this.onClearFacet.bind(this);\n        this.onFacetClick = this.onFacetClick.bind(this);\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\n        this.filterFacetItems = this.filterFacetItems.bind(this);\n\n        this.bindEvents();\n    }\n\n    // Public methods\n    refreshView(content) {\n        if (content) {\n            this.callback(content);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Restore view state\n        this.restoreCollapsedFacets();\n        this.restoreCollapsedFacetItems();\n\n        // Bind events\n        this.bindEvents();\n    }\n\n    updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }\n\n    expandFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Remove\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n\n    collapseFacetItems($navList) {\n        const id = $navList.attr('id');\n        const hasMoreResults = $navList.data('hasMoreResults');\n\n        if (hasMoreResults) {\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n        } else {\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n        }\n    }\n\n    toggleFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Toggle depending on `collapsed` flag\n        if (this.collapsedFacetItems.includes(id)) {\n            this.getMoreFacetResults($navList);\n\n            return true;\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    getMoreFacetResults($navList) {\n        const facet = $navList.data('facet');\n        const facetUrl = urlUtils.getUrl();\n\n        if (this.requestOptions.showMore) {\n            api.getPage(facetUrl, {\n                template: this.requestOptions.showMore,\n                params: {\n                    list_all: facet,\n                },\n            }, (err, response) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                this.options.modal.open();\n                this.options.modalOpen = true;\n                this.options.modal.updateContent(response);\n            });\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    filterFacetItems(event) {\n        const $items = $('.navList-item');\n        const query = $(event.currentTarget).val().toLowerCase();\n\n        $items.each((index, element) => {\n            const text = $(element).text().toLowerCase();\n            if (text.indexOf(query) !== -1) {\n                $(element).show();\n            } else {\n                $(element).hide();\n            }\n        });\n    }\n\n    expandFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.open();\n    }\n\n    collapseFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.close();\n    }\n\n    collapseAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.collapseFacet($accordionToggle);\n        });\n    }\n\n    expandAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.expandFacet($accordionToggle);\n        });\n    }\n\n    // Private methods\n    initPriceValidator() {\n        if ($(this.options.priceRangeFormSelector).length === 0) {\n            return;\n        }\n\n        const validator = nod();\n        const selectors = {\n            errorSelector: this.options.priceRangeErrorSelector,\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\n            formSelector: this.options.priceRangeFormSelector,\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\n        };\n\n        Validators.setMinMaxPriceValidation(validator, selectors, this.options.validationErrorMessages);\n\n        this.priceRangeValidator = validator;\n    }\n\n    restoreCollapsedFacetItems() {\n        const $navLists = $(this.options.facetNavListSelector);\n\n        // Restore collapsed state for each facet\n        $navLists.each((index, navList) => {\n            const $navList = $(navList);\n            const id = $navList.attr('id');\n            const shouldCollapse = this.collapsedFacetItems.includes(id);\n\n            if (shouldCollapse) {\n                this.collapseFacetItems($navList);\n            } else {\n                this.expandFacetItems($navList);\n            }\n        });\n    }\n\n    restoreCollapsedFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n            const id = collapsible.targetId;\n            const shouldCollapse = this.collapsedFacets.includes(id);\n\n            if (shouldCollapse) {\n                this.collapseFacet($accordionToggle);\n            } else {\n                this.expandFacet($accordionToggle);\n            }\n        });\n    }\n\n    bindEvents() {\n        // Clean-up\n        this.unbindEvents();\n\n        // DOM events\n        $(window).on('statechange', this.onStateChange);\n        $(window).on('popstate', this.onPopState);\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\n\n        // Hooks\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    unbindEvents() {\n        // DOM events\n        $(window).off('statechange', this.onStateChange);\n        $(window).off('popstate', this.onPopState);\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\n\n        // Hooks\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    onClearFacet(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Update URL\n        urlUtils.goToUrl(url);\n    }\n\n    onToggleClick(event) {\n        const $toggle = $(event.currentTarget);\n        const $navList = $($toggle.attr('href'));\n\n        // Prevent default\n        event.preventDefault();\n\n        // Toggle visible items\n        this.toggleFacetItems($navList);\n    }\n\n    onFacetClick(event, currentTarget) {\n        const $link = $(currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n\n        $link.toggleClass('is-selected');\n\n        // Update URL\n        urlUtils.goToUrl(url);\n\n        if (this.options.modalOpen) {\n            this.options.modal.close();\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        event.preventDefault();\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onRangeSubmit(event, currentTarget) {\n        event.preventDefault();\n\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n            return;\n        }\n\n        const url = Url.parse(window.location.href, true);\n        let queryParams = decodeURI($(currentTarget).serialize()).split('&');\n        queryParams = urlUtils.parseQueryParams(queryParams);\n\n        for (const key in queryParams) {\n            if (queryParams.hasOwnProperty(key)) {\n                url.query[key] = queryParams[key];\n            }\n        }\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onStateChange() {\n        this.updateView();\n    }\n\n    onAccordionToggle(event) {\n        const $accordionToggle = $(event.currentTarget);\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n        const id = collapsible.targetId;\n\n        if (collapsible.isCollapsed) {\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n        } else {\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\n        }\n    }\n\n    onPopState() {\n        const currentUrl = window.location.href;\n        const searchParams = new URLSearchParams(currentUrl);\n        // If searchParams does not contain a page value then modify url query string to have page=1\n        if (!searchParams.has('page')) {\n            const linkUrl = $('.pagination-link').attr('href');\n            const re = /page=[0-9]+/i;\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\n            window.history.replaceState({}, document.title, updatedLinkUrl);\n        }\n        $(window).trigger('statechange');\n    }\n}\n\nexport default FacetedSearch;\n","import Url from 'url';\n\nconst urlUtils = {\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\n\n    goToUrl: (url) => {\n        window.history.pushState({}, document.title, url);\n        $(window).trigger('statechange');\n    },\n\n    replaceParams: (url, params) => {\n        const parsed = Url.parse(url, true);\n        let param;\n\n        // Let the formatter use the query object to build the new url\n        parsed.search = null;\n\n        for (param in params) {\n            if (params.hasOwnProperty(param)) {\n                parsed.query[param] = params[param];\n            }\n        }\n\n        return Url.format(parsed);\n    },\n\n    buildQueryString: (queryData) => {\n        let out = '';\n        let key;\n        for (key in queryData) {\n            if (queryData.hasOwnProperty(key)) {\n                if (Array.isArray(queryData[key])) {\n                    let ndx;\n\n                    for (ndx in queryData[key]) {\n                        if (queryData[key].hasOwnProperty(ndx)) {\n                            out += `&${key}=${queryData[key][ndx]}`;\n                        }\n                    }\n                } else {\n                    out += `&${key}=${queryData[key]}`;\n                }\n            }\n        }\n\n        return out.substring(1);\n    },\n\n    parseQueryParams: (queryData) => {\n        const params = {};\n\n        for (let i = 0; i < queryData.length; i++) {\n            const temp = queryData[i].split('=');\n\n            if (temp[0] in params) {\n                if (Array.isArray(params[temp[0]])) {\n                    params[temp[0]].push(temp[1]);\n                } else {\n                    params[temp[0]] = [params[temp[0]], temp[1]];\n                }\n            } else {\n                params[temp[0]] = temp[1];\n            }\n        }\n\n        return params;\n    },\n};\n\nexport default urlUtils;\n","import _ from 'lodash';\nimport { showAlertModal } from './modal';\n\nfunction decrementCounter(counter, item) {\n    const index = counter.indexOf(item);\n\n    if (index > -1) {\n        counter.splice(index, 1);\n    }\n}\n\nfunction incrementCounter(counter, item) {\n    counter.push(item);\n}\n\nfunction updateCounterNav(counter, $link, urlContext) {\n    if (counter.length !== 0) {\n        if (!$link.is('visible')) {\n            $link.addClass('show');\n        }\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\n        $link.find('span.countPill').html(counter.length);\n    } else {\n        $link.removeClass('show');\n    }\n}\n\nexport default function (urlContext) {\n    let products;\n\n    const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\n    const $compareLink = $('a[data-compare-nav]');\n\n    if ($checked.length !== 0) {\n        products = _.map($checked, element => element.value);\n\n        updateCounterNav(products, $compareLink, urlContext);\n    }\n\n    const compareCounter = products || [];\n\n    $('body').on('click', '[data-compare-id]', event => {\n        const product = event.currentTarget.value;\n        const $clickedCompareLink = $('a[data-compare-nav]');\n\n        if (event.currentTarget.checked) {\n            incrementCounter(compareCounter, product);\n        } else {\n            decrementCounter(compareCounter, product);\n        }\n\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\n    });\n\n    $('body').on('submit', '[data-product-compare]', event => {\n        const $this = $(event.currentTarget);\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\n\n        if (productsToCompare.length <= 1) {\n            showAlertModal('You must select at least two products to compare');\n            event.preventDefault();\n        }\n    });\n\n    $('body').on('click', 'a[data-compare-nav]', () => {\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        if ($clickedCheckedInput.length <= 1) {\n            showAlertModal('You must select at least two products to compare');\n            return false;\n        }\n    });\n}\n"],"names":["CatalogPage","_PageManager","context","_this","call","window","addEventListener","document","activeElement","id","localStorage","setItem","_proto","prototype","arrangeFocusOnSortBy","$sortBySelector","$","getItem","focus","removeItem","onSortBySubmit","event","currentTarget","url","Url","location","href","queryParams","serialize","split","query","page","preventDefault","pathname","search","urlUtils","buildQueryString","PageManager","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","FacetedSearch","requestOptions","callback","options","this","_extend","collapsedFacets","collapsedFacetItems","collapsibleFactory","initPriceValidator","each","index","navList","collapseFacetItems","accordionToggle","collapsible","data","isCollapsed","push","targetId","setTimeout","is","collapseAllFacets","onStateChange","bind","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","content","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","_this2","show","api","getPage","getUrl","err","hide","Error","expandFacetItems","$navList","attr","_without","hasMoreResults","_union","toggleFacetItems","includes","getMoreFacetResults","_this3","facet","facetUrl","showMore","template","params","list_all","response","open","updateContent","$items","val","toLowerCase","element","text","indexOf","expandFacet","$accordionToggle","collapseFacet","close","_this4","expandAllFacets","_this5","length","validator","nod","selectors","errorSelector","fieldsetSelector","formSelector","maxPriceSelector","minPriceSelector","Validators","setMinMaxPriceValidation","validationErrorMessages","priceRangeValidator","_this6","_this7","unbindEvents","on","onPopState","hooks","off","stopPropagation","goToUrl","$toggle","$link","toggleClass","urlQueryParams","Object","assign","areAll","constants","VALID","decodeURI","key","parseQueryParams","hasOwnProperty","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","history","replaceState","title","trigger","pushState","replaceParams","param","parsed","queryData","out","Array","isArray","ndx","substring","i","temp","updateCounterNav","counter","urlContext","addClass","compare","join","find","html","removeClass","products","$checked","$compareLink","_map","value","compareCounter","item","product","$clickedCompareLink","checked","splice","decrementCounter","showAlertModal"],"sourceRoot":""}